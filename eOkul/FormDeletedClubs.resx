<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2WlpnXumOgGu9cRRqsshe/Sx1FqvJGnMDkvrGf3e8TU7v0dPT631SpLG65K07uv///fs1HryCH0r7Zp6
        tE26MLXWLUkaq6PSRupqgLo7UOsFvXdS6tmzUmvdkqRxqul/ta9vqjn4rRf13I1pn9SzrdP5qbV+SdIY
        HZ5uV30N/o3UemGvvS2N4KBUd39qbQNJUt/9Vdqk56XWi3vsm+kuaRQ1+am1HSRJ/XZZqvHwm1RfF9dN
        Alpv0lvPTSPZKn0otbaFJKm/bk418n+zHZjqRa0366VPpPpjZzQ7pvNSa5tIkvqp5vv8Stpiv5lab9hD
        V6Z906j2TP+SWttGkjT/1c7/19OS1NfFf5FabzzP1UZ5Uhpd3fb4nNTaRpKk+a1O+D4yLcvu6fOp9QPm
        teMSt9k+vTW1tpMkaf76ajo4TUVdI1+jA1s/aN56Z2JjdW1onSXa2maSpPmovrWf+pVt90uXp9YPnJfO
        TDUWl7bdUs1EMCtAkuari9Lj04rZL83rTPn3pI1ufkBTnRx5cqoJia1tKUmajb6U6kZ2q7J/q0ECn06t
        X2RWe02qExrZMnX+Rw2F+mjq/ZJQSZqX6p49f5QekVZ931bXkb85tX6xWerq9AuJ5ds5PTa9ItW3KTVD
        4XOpzg25QpI01eqQ+8Xpn9OH0xtTDa6rw/Ezob52uDa1dr5r3T+lOmQBAKyAvdOpqbUTXovqvv41797x
        fgBYBYelz6TWTnk1qjPXT0mbdbMDAGC6Dk2reSOhm1J9A3GfBACssfunE9JKDZep6YT1Vf9dEwAwY7ZL
        j0zHpzpzfKlDZr6ezkhHpXsnAGCO1Oz5A9KT0zGpLm2o8bynp5rU92ephtD8fnpBqkMK90gAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA
        rJtM/hf0n1cf+sa+BwAAAABJRU5ErkJggg==
</value>
  </data>
</root>